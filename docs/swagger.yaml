basePath: /
definitions:
  entities.Role:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  entities.User:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      role:
        $ref: '#/definitions/entities.Role'
      role_id:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  user_models.CreateUserRequest:
    properties:
      email:
        example: example@example.com
        type: string
      is_active:
        type: boolean
      name:
        example: Soda Pop
        maxLength: 120
        type: string
      password:
        example: P@ssw0rd
        type: string
      role_id:
        example: a1bf3d66-e4ae-4d73-89c6-917f0f301003
        type: string
    required:
    - email
    - name
    - password
    - role_id
    type: object
  user_models.CreateUserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      role_id:
        type: string
    type: object
info:
  contact: {}
  description: API for Interview Tracker
  title: Interview Tracker API
  version: "1.0"
paths:
  /interview-tracker/health:
    get:
      description: Returns success if the service is healthy
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /interview-tracker/internal/v1/users/create:
    post:
      consumes:
      - application/json
      description: Create user for
      parameters:
      - description: user create JSON
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user_models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/user_models.CreateUserResponse'
      summary: Create user
      tags:
      - users
  /interview-tracker/internal/v1/users/details/{userId}:
    get:
      consumes:
      - application/json
      description: Get user By ID
      parameters:
      - default: 888f2c6b-cc1a-4e94-bd6e-d8ba0ac36fc3
        description: User ID
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/entities.User'
      summary: Get user By ID
      tags:
      - users
  /interview-tracker/internal/v1/users/role-list:
    get:
      consumes:
      - application/json
      description: Get role
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/entities.Role'
      summary: Get role
      tags:
      - users
swagger: "2.0"
